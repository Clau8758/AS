#!/usr/bin/env python
import roslib
roslib.load_manifest('hello_ros')
 
import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
import shape_msgs.msg as shape_msgs
 
from std_msgs.msg import String

from gazebo_msgs.srv import GetModelState
from gazebo_msgs.srv import GetWorldProperties


class Block:
    def __init__(self, name, relative_entity_name):
        self._name = name
        self._relative_entity_name = relative_entity_name

class Tutorial:

    _blockListDict = {
        'block_a': Block('cube1', 'ground_plane'),
        'block_b': Block('jaco_on_table', 'ground_plane'),
        'block_b': Block('jaco_on_table', 'ground_plane'),
        'block_b': Block('jaco_on_table', 'ground_plane'),
        'block_b': Block('jaco_on_table', 'ground_plane'),
        'block_b': Block('jaco_on_table', 'ground_plane'),

    }

    def show_gazebo_models(self):
        try:
            model_coordinates = rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)
            

            for block in self._blockListDict.itervalues():
                blockName = str(block._name)
                resp_coordinates = model_coordinates(blockName, block._relative_entity_name)
                print '\n'
                print 'Status.success = ', resp_coordinates.success
                print(blockName)
                print("Cube " + str(block._name))
                print("Valeur de X : " + str(resp_coordinates.pose.position.x))
                print("Quaternion y : " + str(resp_coordinates.pose.orientation.y))
                print("Quaternion z : " + str(resp_coordinates.pose.orientation.z))
                

        except rospy.ServiceException as e:
            rospy.loginfo("Get Model State service call failed:  {0}".format(e))

#world_prop = rospy.ServiceProxy('/gazebo/get_world_properties', GetWorldProperties)
#test= world_prop(self.model_names)
#world_prop = rospy.ServiceProxy('/gazebo/get_world_properties', GetWorldProperties)
##print(str(world_prop.model_names))
#print("Hello"+ str(world_prop))
print("Hello"+ str(rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)))


if __name__ == '__main__':
    tuto = Tutorial()
    tuto.show_gazebo_models()

